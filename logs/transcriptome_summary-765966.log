Lmod has detected the following error: The following module(s) are unknown:
"mamba/22.11.1-4"

Please check the spelling or version number. Also try "module spider ..."
It is also possible your cache file is out-of-date; it may help to try:
  $ module --ignore_cache load "mamba/22.11.1-4"

Also make sure that all modulefiles written in TCL start with the string
#%Module



/sfs/gpfs/tardis/project/sheynkman/projects/Mohi_MDS_LRP/00_scripts/04_transcriptome_summary_gene_table_only.py:24: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  fdata['cpm'] = 1000000 * fdata['fl_cts'] / fdata['fl_cts'].sum(skipna=True)
/sfs/gpfs/tardis/project/sheynkman/projects/Mohi_MDS_LRP/00_scripts/04_transcriptome_summary_gene_table_only.py:30: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  fdata['gene'] = fdata['gene'].map(gdict).fillna(df['gene'])
/sfs/gpfs/tardis/project/sheynkman/projects/Mohi_MDS_LRP/00_scripts/04_transcriptome_summary_gene_table_only.py:33: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  fdata.drop(fdata[fdata['gene'] == df['gene']].index, inplace=True)
/sfs/gpfs/tardis/project/sheynkman/projects/Mohi_MDS_LRP/00_scripts/04_transcriptome_summary_gene_table_only.py:39: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  fdata['transcript'] = fdata['transcript'].map(tdict).fillna(df2['transcript'])
Isoform Table from sqanti output has been prepared
/sfs/gpfs/tardis/project/sheynkman/projects/Mohi_MDS_LRP/00_scripts/04_transcriptome_summary_gene_table_only.py:24: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  fdata['cpm'] = 1000000 * fdata['fl_cts'] / fdata['fl_cts'].sum(skipna=True)
/sfs/gpfs/tardis/project/sheynkman/projects/Mohi_MDS_LRP/00_scripts/04_transcriptome_summary_gene_table_only.py:30: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  fdata['gene'] = fdata['gene'].map(gdict).fillna(df['gene'])
/sfs/gpfs/tardis/project/sheynkman/projects/Mohi_MDS_LRP/00_scripts/04_transcriptome_summary_gene_table_only.py:33: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  fdata.drop(fdata[fdata['gene'] == df['gene']].index, inplace=True)
/sfs/gpfs/tardis/project/sheynkman/projects/Mohi_MDS_LRP/00_scripts/04_transcriptome_summary_gene_table_only.py:39: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  fdata['transcript'] = fdata['transcript'].map(tdict).fillna(df2['transcript'])
Isoform Table from sqanti output has been prepared
